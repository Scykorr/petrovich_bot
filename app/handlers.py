from aiogram import Bot, Dispatcher, types, F, Router
from aiogram.filters import Command, CommandStart
from aiogram.fsm.context import FSMContext
from app.keyboards import get_number, registration, help_categories
from .states import Register

router = Router()


@router.message(CommandStart())
async def get_message(message: types.Message):
    await message.answer('üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –í–∞—à –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫!\n'
                         '–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—Ä–∞—â–µ–Ω–∏—è —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å\n'
                         '–Ω–µ–∫–æ—Ç–æ—Ä—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ (–∫–Ω–æ–ø–∫–∞ –Ω–∏–∂–µ)', reply_markup=registration)


@router.message(F.text == '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è')
async def register(message: types.Message, state: FSMContext):
    await state.set_state(Register.surname)
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –í–∞—à—É –§–∞–º–∏–ª–∏—é: ')


@router.message(Register.surname)
async def register_surname(message: types.Message, state: FSMContext):
    await state.update_data(surname=message.text)
    await state.set_state(Register.name)
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –ò–º—è: ')


@router.message(Register.name)
async def register_name(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(Register.parent_name)
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –û—Ç—á–µ—Å—Ç–≤–æ: ')


@router.message(Register.parent_name)
async def register_parent_name(message: types.Message, state: FSMContext):
    await state.update_data(parent_name=message.text)
    await state.set_state(Register.birthday_date)
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –í–∞—à—É –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è (–æ–±—Ä–∞–∑–µ—Ü: 01.01.1991): ')


@router.message(Register.birthday_date)
async def register_birthday_date(message: types.Message, state: FSMContext):
    await state.update_data(birthday_date=message.text)
    await state.set_state(Register.phone_number)
    await message.answer('–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –í–∞—à –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ', reply_markup=get_number)


@router.message(Register.phone_number, F.contact)
async def register_number(message: types.Message, state: FSMContext):
    await state.update_data(phone_number=message.contact.phone_number)
    await state.set_state(Register.help_category)
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: ', reply_markup=help_categories)


@router.message(Register.help_category)
async def register_help_category(message: types.Message, state: FSMContext):
    await state.update_data(help_category=message.text)
    data = await state.get_data()
    await message.answer(f'–í–∞—à–∞ –§–∞–º–∏–ª–∏—è: {data["surname"]}\n'
                         f'–í–∞—à–µ –ò–º—è: {data["name"]}\n'
                         f'–í–∞—à–µ –û—Ç—á–µ—Å—Ç–≤–æ: {data["parent_name"]}\n'
                         f'–í–∞—à–∞ –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {data["birthday_date"]}\n'
                         f'–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {data["phone_number"]}\n'
                         f'–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {data["help_category"]}'
                         )
    await state.clear()
